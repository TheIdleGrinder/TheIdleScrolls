<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AXE" xml:space="preserve">
    <value>Axe</value>
  </data>
  <data name="AXE0" xml:space="preserve">
    <value>Simple Axe</value>
  </data>
  <data name="AXE1" xml:space="preserve">
    <value>Hatchet</value>
  </data>
  <data name="AXE2" xml:space="preserve">
    <value>Battle Axe</value>
  </data>
  <data name="BEAR" xml:space="preserve">
    <value>Bear</value>
  </data>
  <data name="BLN" xml:space="preserve">
    <value>Blunt Weapon</value>
  </data>
  <data name="BLN0" xml:space="preserve">
    <value>Simple Club</value>
  </data>
  <data name="BLN1" xml:space="preserve">
    <value>Mace</value>
  </data>
  <data name="BLN2" xml:space="preserve">
    <value>Warhammer</value>
  </data>
  <data name="BOAR" xml:space="preserve">
    <value>Wild Boar</value>
  </data>
  <data name="BOSS_CULTLEADER" xml:space="preserve">
    <value>Grand Wizard of the Order</value>
  </data>
  <data name="BOSS_MERCENARY" xml:space="preserve">
    <value>Mercenary Centurion</value>
  </data>
  <data name="BOSS_NECROMANCER" xml:space="preserve">
    <value>The Necromancer</value>
  </data>
  <data name="BOSS_VOIDPRIEST" xml:space="preserve">
    <value>Priest of the Void</value>
  </data>
  <data name="CASTLE" xml:space="preserve">
    <value>Cult's Stronghold</value>
  </data>
  <data name="CASTLE_DESCRIPTION" xml:space="preserve">
    <value>The traiterous lord who had hired the mercenaries has turned his castle into the cult's base of operations.</value>
  </data>
  <data name="CRYPT" xml:space="preserve">
    <value>The Crypt</value>
  </data>
  <data name="CRYPT_DESCRIPTION" xml:space="preserve">
    <value>There is something stirring beneath the graveyard...</value>
  </data>
  <data name="DRAGON" xml:space="preserve">
    <value>Dragon</value>
  </data>
  <data name="DRAGON2" xml:space="preserve">
    <value>Big Dragon</value>
  </data>
  <data name="DRAGON3" xml:space="preserve">
    <value>Bigger Dragon</value>
  </data>
  <data name="DUMMY" xml:space="preserve">
    <value>Training Dummy</value>
  </data>
  <data name="HAR" xml:space="preserve">
    <value>Heavy Armor</value>
  </data>
  <data name="HAR0" xml:space="preserve">
    <value>Simple Heavy Armor</value>
  </data>
  <data name="HAR1" xml:space="preserve">
    <value>Plate Armor</value>
  </data>
  <data name="LABYRINTH" xml:space="preserve">
    <value>Labyrinth</value>
  </data>
  <data name="LABYRINTH_DESCRIPTION" xml:space="preserve">
    <value>Below the castle, there is a huge, labyrinthian dungeon. This must be where the leader of the cult is hiding.</value>
  </data>
  <data name="LAR" xml:space="preserve">
    <value>Light Armor</value>
  </data>
  <data name="LAR0" xml:space="preserve">
    <value>Simple Light Armor</value>
  </data>
  <data name="LAR1" xml:space="preserve">
    <value>Padded Armor</value>
  </data>
  <data name="LBL" xml:space="preserve">
    <value>Long Blade</value>
  </data>
  <data name="LBL0" xml:space="preserve">
    <value>Simple Sword</value>
  </data>
  <data name="LBL1" xml:space="preserve">
    <value>Long Sword</value>
  </data>
  <data name="LBL2" xml:space="preserve">
    <value>Claymore</value>
  </data>
  <data name="LIGHTHOUSE" xml:space="preserve">
    <value>The Lighthouse</value>
  </data>
  <data name="LIGHTHOUSE2" xml:space="preserve">
    <value>The Lighthouse II</value>
  </data>
  <data name="LIGHTHOUSE2_DESCRIPTION" xml:space="preserve">
    <value>While you were fighting the cultists in their castle, their leader has returned to the old lighthouse to complete the ritual.</value>
  </data>
  <data name="LIGHTHOUSE_DESCRIPTION" xml:space="preserve">
    <value>Cultists have holed up in the old lighthouse. The blue flames they lit have attracted more than just ships.</value>
  </data>
  <data name="MAT_L0" xml:space="preserve">
    <value>Leather</value>
  </data>
  <data name="MAT_L1" xml:space="preserve">
    <value>Hard Leather</value>
  </data>
  <data name="MAT_M0" xml:space="preserve">
    <value>Iron</value>
  </data>
  <data name="MAT_M1" xml:space="preserve">
    <value>Steel</value>
  </data>
  <data name="MAT_W0" xml:space="preserve">
    <value>Beech</value>
  </data>
  <data name="MAT_W1" xml:space="preserve">
    <value>Oak</value>
  </data>
  <data name="MERCCAMP" xml:space="preserve">
    <value>Mercenary Camp</value>
  </data>
  <data name="MERCCAMP_DESCRIPTION" xml:space="preserve">
    <value>The cultists have acquired the services of a company of human mercenaries. Raiding their camp and killing their leader should drive them away.</value>
  </data>
  <data name="MOB_ABOMINATION" xml:space="preserve">
    <value>Abomination</value>
  </data>
  <data name="MOB_CULTIST" xml:space="preserve">
    <value>Cultist</value>
  </data>
  <data name="MOB_CULTKNIGHT" xml:space="preserve">
    <value>Knight of the Order</value>
  </data>
  <data name="MOB_DEMON1" xml:space="preserve">
    <value>Winged Demon</value>
  </data>
  <data name="MOB_DEMON2" xml:space="preserve">
    <value>Bigger Imp</value>
  </data>
  <data name="MOB_FANATIC" xml:space="preserve">
    <value>Fanatic</value>
  </data>
  <data name="MOB_GREATERDEMON" xml:space="preserve">
    <value>Greater Demon of the Void</value>
  </data>
  <data name="MOB_IMP" xml:space="preserve">
    <value>Imp</value>
  </data>
  <data name="MOB_LESSERDEMON" xml:space="preserve">
    <value>Lessor Demon of the Void</value>
  </data>
  <data name="MOB_MERCENARY" xml:space="preserve">
    <value>Mercenary Legionnaire</value>
  </data>
  <data name="MOB_SKELETON" xml:space="preserve">
    <value>Skeleton</value>
  </data>
  <data name="MOB_VOIDCULTIST" xml:space="preserve">
    <value>Void Infused Cultist</value>
  </data>
  <data name="MOB_VOIDFIEND" xml:space="preserve">
    <value>Void Fiend</value>
  </data>
  <data name="MOB_WARLOCK" xml:space="preserve">
    <value>Warlock</value>
  </data>
  <data name="MOB_ZOMBIE" xml:space="preserve">
    <value>Zombie</value>
  </data>
  <data name="OGRE" xml:space="preserve">
    <value>Ogre</value>
  </data>
  <data name="POL" xml:space="preserve">
    <value>Polearm</value>
  </data>
  <data name="POL0" xml:space="preserve">
    <value>Simple Spear</value>
  </data>
  <data name="POL1" xml:space="preserve">
    <value>Halberd</value>
  </data>
  <data name="POL2" xml:space="preserve">
    <value>Hunting Spear</value>
  </data>
  <data name="SBL" xml:space="preserve">
    <value>Short Blade</value>
  </data>
  <data name="SBL0" xml:space="preserve">
    <value>Simple Knife</value>
  </data>
  <data name="SBL1" xml:space="preserve">
    <value>Dagger</value>
  </data>
  <data name="SBL2" xml:space="preserve">
    <value>Short Sword</value>
  </data>
  <data name="TEMPLE" xml:space="preserve">
    <value>Ancient Temple</value>
  </data>
  <data name="TEMPLE_DESCRIPTION" xml:space="preserve">
    <value>The cultists have relocated to the catacombs below the ruins of an ancient elven temple.</value>
  </data>
  <data name="THRESHOLD" xml:space="preserve">
    <value>The Threshold</value>
  </data>
  <data name="THRESHOLD_DESCRIPTION" xml:space="preserve">
    <value>We were too late! The ritual has been completed and the gate between the dimensions has been opened. An army of demons is flooding through the rift. Stand fast and fight them off!</value>
  </data>
  <data name="WOLF" xml:space="preserve">
    <value>Wolf</value>
  </data>
  <data name="WYVERN" xml:space="preserve">
    <value>Wyvern</value>
  </data>
</root>