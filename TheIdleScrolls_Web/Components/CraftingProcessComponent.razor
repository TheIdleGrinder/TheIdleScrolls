@using TheIdleScrolls_Core

@* @inject CoreWrapperModel CoreWrapper *@

<div class="crafting-process-frame">
    <h4>@(GetCraftTypeName())</h4>
    <h6 class="@CssUtilities.GetClassesForItem(Craft.Item)">@Craft.Item.Name</h6>
    @* <div>@($"{Craft.Duration:0.#}") seconds</div> *@
    <div class="progressFrame craftingProgressBarFrame" style="justify-content: start">
        <div class="progressFill craftingProgressBar" style="width: @(PctString());"></div>
    </div>
    <div>@($"{Craft.Remaining:0}") seconds left</div>
</div>

<style>
    .crafting-process-frame {
        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
        padding: 0.5em;
        border: 3px solid var(--frame-color);
        background-color: var(--back-color);
        border-radius: 8px;
        align-items: center;
    }

    div.craftingProgressBarFrame {
        justify-content: start;
        background-color: var(--back-color);
        border: 1px solid var(--frame-color);
        width: 220px;
    }

    div.craftingProgressBar {
        background-color: lightseagreen;
        height: 20px;
    }
</style>

@code {
    [Parameter]
    public CraftingProcessRepresentation Craft { get; set; }

    private string GetCraftTypeName()
    {
        return Craft.Type switch
        {
            TheIdleScrolls_Core.Crafting.CraftingType.Craft => "Crafting",
            TheIdleScrolls_Core.Crafting.CraftingType.Reforge => "Reforging",
            _ => "??"
        };
    }

    private string PctString()
    {
        double pct = 1 - (Craft.Remaining / Craft.Duration);
        return $"{pct:0%}";
    }
}
