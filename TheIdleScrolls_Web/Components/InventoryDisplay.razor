@using TheIdleScrolls_Core
@using TheIdleScrolls_Web.CoreWrapper

@inject CoreWrapperModel CoreWrapper

<div id="inventoryContainer">
    <div class="scrolling-table">
        <table>
            <thead>
                <tr>
                    <th>Item</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Items)
                {
                    <tr>
                        <td class="selectable @(GetSelectionClass(item)) @(CssUtilities.GetClassesForItem(item))" 
                        @onclick=@(() => SelectItem(item.Id))
                        @ondblclick=@(() => EquipItem(item.Id))>
                            @item.Name
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<style>
    #inventoryContainer {
        flex: 1 1 auto;
        margin: 10px;
        box-sizing: border-box;
        max-height: 100%;
    }
</style>

@code {
    List<ItemRepresentation> Items => CoreWrapper.Inventory;

    int selectedIndex = -1;

    protected override void OnInitialized()
    {
        CoreWrapper.StateChanged += StateHasChanged;
        CoreWrapper.StateChanged += UpdateSelectedItem;
        base.OnInitialized();
    }

    void SelectItem(uint id)
    {
        CoreWrapper.ToggleItemHighlight(id);
        selectedIndex = Items.FindIndex(item => item.Id == id);
        StateHasChanged();
    }

    void EquipItem(uint id)
    {
        CoreWrapper.InputHandler.EquipItem(CoreWrapper.Character.Id, id);
    }

    string GetSelectionClass(ItemRepresentation item)
    {
        return CoreWrapper.IsItemHighlighted(item.Id) ? "selectedItem" : "";
    }

    void UpdateSelectedItem()
    {
        // Reset selected index if an equipped or no item is highlighted
        if (CoreWrapper.HighlightedItem == uint.MaxValue || CoreWrapper.Equipment.Items.Any(item => item.Id == CoreWrapper.HighlightedItem))
        {
            selectedIndex = -1;
        }
        // Select a new item if the previously selected one is gone (e.g. was sold)
        if (selectedIndex >= 0 && (selectedIndex >= Items.Count || !CoreWrapper.IsItemHighlighted(Items[selectedIndex].Id)))
        {
            selectedIndex = Math.Min(selectedIndex, Items.Count - 1);
            if (selectedIndex >= 0)
            {
                SelectItem(Items[selectedIndex].Id);
            }
        }
    }
}
