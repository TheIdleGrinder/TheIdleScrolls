@using TheIdleScrolls_Web.CoreWrapper
@using TheIdleScrolls_Core

@inject CoreWrapperModel CoreWrapper

<div id="statContainer">
    @if (CoreWrapper.IsFeatureAvailable(GameFeature.Bounties))
    {
        <h3>Bounty Hunt</h3>
        <p>Level: @(CoreWrapper.BountyState.CurrentHuntLevel)</p>
        <p>Progress: @(CoreWrapper.BountyState.CurrentHuntCount) / @(CoreWrapper.BountyState.CurrentHuntLength)</p>
        <p>Reward: @(CoreWrapper.BountyState.ExpectedReward)c</p>
    }
    <h3>Statistics</h3>
    @foreach (var line in ReportLines)
    {
        <p>@line</p>
    }
</div>

<style>
    #statContainer {
        display: flex;
        flex-direction: column;
        padding: 10px;
        overflow-y: auto;
        box-sizing: border-box;
        max-height: inherit;
        width: 100%;
        background-color: --back-color;
    }
</style>

@code {
    string StatReport => CoreWrapper.StatisticsReport;

    List<string> ReportLines => StatReport.Split("\n").ToList();

    protected override void OnInitialized()
    {
        CoreWrapper.StateChanged += StateHasChanged;
        base.OnInitialized();
    }
}
