@using TheIdleScrolls_Core
@using TheIdleScrolls_Web.CoreWrapper

@implements IDisposable

@inject CoreWrapperModel CoreWrapper

<div id="timedMessageArea">
	@foreach (var message in CoreWrapper.ExpiringMessages.Where(m => !m.Expired))
	{
		<div class="timed-message">
			@message.Message
		</div>
	}
</div>

<style>
	#timedMessageArea {
		position: absolute;
		right: 0;
		top: 0;
		display: @display;
		flex-direction: column;
		width: 20vw;
		margin: 20px;
		gap: 10px;
	}

	div.timed-message {
		background-color: var(--back-color-special);
		border: 2px solid var(--frame-color-special);
		border-radius: 8px 8px;
		width: 100%;
		padding: 5px;
		overflow-x: hidden;
	}
</style>

@code {
	PeriodicTimer periodicTimer = new(TimeSpan.FromMilliseconds(200));

	string display => CoreWrapper.GameWorld.GameEndAnimation ? "none" : "flex";

	protected override void OnInitialized()
	{
		base.OnInitialized();
		UpdateLoop();
	}

	public void Dispose()
	{
		periodicTimer.Dispose();
	}


	async void UpdateLoop()
	{
		while (await periodicTimer.WaitForNextTickAsync())
		{
			await InvokeAsync(StateHasChanged);
		}
	}
}
