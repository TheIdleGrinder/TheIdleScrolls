@using TheIdleScrolls_Core.Messages
@using TheIdleScrolls_Web.CoreWrapper

@inject CoreWrapperModel CoreWrapper

<div id="bigMessageArea">
    <div id="messageTextArea">
        @if (message.Title != string.Empty)
        {
            <h4>@message.Title</h4>
        }
        <div style="display:flex; flex-direction:inherit">

            @foreach (string line in message.Message.Split('\n'))
            {
                <span>
                    @if (message.Speaker != string.Empty)
                    {
                        <strong>@(message.Speaker): </strong>
                    }
                    @line
                </span>
            }
        </div>
    </div>
    <div>
        @if (message.ResponseOptions.Count == 0)
        {
            <button @onclick="@CoreWrapper.MarkTopMessageAsRead" style="width: 100px;">
                Ok
            </button>
        }
        else
        {
            <ul class="dialogue-options">
                @foreach (string option in message.ResponseOptions)
                {
                    <li @onclick="@(() => SendResponse(option))" class="dialogue-option">
                        @option
                    </li>
                }
            </ul>
        }
    </div>
</div>

<style>
    #bigMessageArea {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        height: 50%;
        width: 50%;
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        /*align-items: center;*/
        background-color: var(--back-color-special);
        border: 5px solid var(--frame-color);
        padding: 20px;
    }

    #textMessageArea {
        display: flex;
        flex-direction: inherit;
        align-items: center;
    }

    ul.dialogue-options {
        /*list-style: none;*/
        list-style-type: disclosure-closed;
    }

    li.dialogue-option {
        align-self: flex-start;
        font-size: large;
        cursor: pointer;
        margin-left: 15%;
        margin-bottom: 5px;
    }

    .dialogue-option:hover {
        text-decoration:underline 1px;
        /*color: var(--frame-color-special);*/
    }
</style>

@code {
    DialogueMessage message => CoreWrapper.DialogueMessages.FirstOrDefault() ?? new("", "", "", "", new());

    void SendResponse(string response)
    {
        CoreWrapper.SendResponse(response);
    }
}
