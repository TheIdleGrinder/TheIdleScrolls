@using TheIdleScrolls_Core.Messages
@using TheIdleScrolls_Web.CoreWrapper

@inject CoreWrapperModel CoreWrapper

<div id="bigMessageArea">
    @if (message.Title != string.Empty)
    {
        <h4>@message.Title</h4>
    }
    <div style="display:flex; flex-direction:inherit">
        @foreach (string line in message.Message.Split('\n'))
        {
            <span>
                @if (message.Speaker != string.Empty)
                {
                    <strong>@(message.Speaker): </strong>
                }
                @line
            </span>
        }
    </div>
    @if (message.ResponseOptions.Count == 0)
    {
        <button @onclick="@CoreWrapper.MarkTopMessageAsRead" style="width: 100px;">
            Ok
        </button>
    }
    else
    {
        @foreach (string option in message.ResponseOptions)
        {
            <button @onclick="@(() => SendResponse(option))" style="width: 200px;">
                @option
            </button>
        }
    }
</div>

<style>
    #bigMessageArea {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        height: 50%;
        width: 50%;
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        align-items: center;
        background-color: var(--back-color-special);
        border: 5px solid var(--frame-color);
        padding: 20px;
    }
</style>

@code {
    DialogueMessage message => CoreWrapper.DialogueMessages.FirstOrDefault() ?? new("", "", "", "", new());

    void SendResponse(string response)
    {
        CoreWrapper.MarkTopMessageAsRead();
    }
}
